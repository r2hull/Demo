Sure üòä here's your simplified High-Level Design (HLD) business logic in step-by-step format without mentioning method names:


---

1Ô∏è‚É£ Receive Bulk Refund Request

System receives a request to process refunds in bulk identified by a unique ID



---

2Ô∏è‚É£ Fetch Bulk Booking Data

Retrieve bulk booking record from the database using the received ID



---

3Ô∏è‚É£ Mark as In-Process

Update the booking status to indicate that processing has started



---

4Ô∏è‚É£ Load Refund File

Read the CSV file from the storage location (like S3) linked to the booking



---

5Ô∏è‚É£ Validate File Headers

Check if the CSV headers match expected format and structure for the merchant

If headers are invalid

Mark booking as failed

Save the error remark

Stop further processing




---

6Ô∏è‚É£ Process Valid Data

If headers are valid

Count total rows

Update status as queued for processing

For each row

Extract refund details

Save data into database

If valid

Push the row ID to Kafka for asynchronous processing






---

7Ô∏è‚É£ Handle Zero Valid Records

If no valid rows found

Update booking with zero valid records

Mark status as processed with remark




---

8Ô∏è‚É£ Process Each Row Asynchronously

Consumer reads row ID from Kafka

Fetch row data from database

Call refund booking service

Based on result

Update refund status as success or failed

Save remarks accordingly




---

9Ô∏è‚É£ Final Booking Status Update

After each row is processed

Check if all rows (success or failed) are completed

If all rows done

Update the bulk booking with final counts and status





---

Let me know if you want this in table format or a flowchart too üìãüß†

