  private void addDefaultHelpSupport(final List<HelpSupport> helpSupports, List<HelpSupportType> types) {
        List<HelpSupportType> presentTypesMid = helpSupports.stream().map(HelpSupport::getType).toList();
        if(CollectionUtils.isNotEmpty(types)) {//Add specific type of generic help and support
            log.info("addDefaultHelpSupport for specific types: {}", types);
            types.forEach(typeToBeAdded -> helpSupports.addAll(helpSupportRepository.findBymIdIsNullAndStatusAndType(STATUS_ACTIVE, typeToBeAdded)));
        } else {
            log.info("addDefaultHelpSupport for all types");
            Stream.of(HelpSupportType.values())
                .filter(hpt -> presentTypesMid.stream().noneMatch(eptPresent -> eptPresent.equals(hpt)))
                .forEach(typeToBeAdded -> {
                    List<HelpSupport> helpSupport = helpSupportRepository.findBymIdIsNullAndStatusAndType(STATUS_ACTIVE, typeToBeAdded);
                    helpSupports.addAll(helpSupport);
                });
        }
    }
