import com.jcraft.jsch.*;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;

public class SftpClientUtil {
    private String host;
    private String username;
    private String password;
    private int port;
    private Session session;
    private ChannelSftp channelSftp;

    public SftpClientUtil(String host, String username, String password, int port) {
        this.host = host;
        this.username = username;
        this.password = password;
        this.port = port;
    }

    public void connect() throws JSchException {
        JSch jsch = new JSch();
        session = jsch.getSession(username, host, port);
        session.setPassword(password);
        session.setConfig("StrictHostKeyChecking", "no"); // Disable host key checking for testing
        System.out.println("Connecting to " + host + ":" + port + " with user " + username);
        session.connect();
        channelSftp = (ChannelSftp) session.openChannel("sftp");
        channelSftp.connect();
    }

    public void disconnect() {
        if (channelSftp != null && channelSftp.isConnected()) {
            channelSftp.exit();
        }
        if (session != null && session.isConnected()) {
            session.disconnect();
        }
    }

    public void uploadFile(String localFilePath, String remoteFilePath) throws JSchException, SftpException {
        File localFile = new File(localFilePath);
        if (!localFile.exists()) {
            throw new SftpException(ChannelSftp.SSH_FX_NO_SUCH_FILE, "Local file does not exist: " + localFilePath);
        }
        channelSftp.put(localFilePath, remoteFilePath);
    }

    public void downloadFile(String remoteFilePath, String localFilePath) throws JSchException, SftpException {
        channelSftp.get(remoteFilePath, localFilePath);
    }
}

class SftpClientMain {
    private static final String HOST = "localhost";
    private static final String USERNAME = "root"; // Updated to match server
    private static final String PASSWORD = "root"; // Updated to match server
    private static final int PORT = 55507; // Matches current server port

    public static void main(String[] args) {
        SftpClientUtil sftpClient = new SftpClientUtil(HOST, USERNAME, PASSWORD, PORT);
        
        try {
            // Connect to the SFTP server
            sftpClient.connect();
            System.out.println("Connected to SFTP server");

            // Create a temporary file to upload
            Path tempFile = Files.createTempFile("test-upload-", ".txt");
            Files.writeString(tempFile, "Hello, SFTP!");
            String localFilePath = tempFile.toString();
            String remoteFilePath = "/test-file.txt";

            // Upload file
            sftpClient.uploadFile(localFilePath, remoteFilePath);
            System.out.println("File uploaded successfully to: " + remoteFilePath);

            // Download file
            Path downloadedFile = Files.createTempFile("test-download-", ".txt");
            String downloadedFilePath = downloadedFile.toString();
            sftpClient.downloadFile(remoteFilePath, downloadedFilePath);
            System.out.println("File downloaded successfully to: " + downloadedFilePath);

            // Verify content
            String downloadedContent = Files.readString(downloadedFile);
            System.out.println("Downloaded file content: " + downloadedContent);

            // Clean up temporary files
            Files.delete(tempFile);
            Files.delete(downloadedFile);

        } catch (JSchException | SftpException | IOException e) {
            System.err.println("Error occurred: " + e.getMessage());
            e.printStackTrace();
        } finally {
            sftpClient.disconnect();
            System.out.println("Disconnected from SFTP server");
        }
    }
}