
public enum RefundStatus {

    CANCELLATION_BOOKED, REFUND_BOOKED, CANCELLATION_IN_PROCESS, REFUND_IN_PROCESS, REFUND_PROCESSED, REFUND_FAILED;

    public static RefundStatus getRefundStatus(String refundStatus) {
        return Arrays.stream(values()).filter(p -> p.name().equalsIgnoreCase(refundStatus)).findFirst().orElseThrow(() -> new TransactionException(TransactionErrorConstants.INVALID_ERROR_CODE, MessageFormat.format(TransactionErrorConstants.INVALID_ERROR_MESSAGE, "Refund status", "Valid refund status are " + Arrays.toString(RefundStatus.values()))));
    }
}


public List<BulkRefundBookingDetails> getBulkRefundByBulkIdAndRefundStatus(String bulkId, String refundStatus) {
        return bulkRefundDetailsRepository.findByBulkIdAndRefundStatus(bulkId,refundStatus);
    }
