public List<AggMerchantVolumeVelocity> getMerchantVolumeDetails(String mid) {
    // Fetch from cache
    List<AggMerchantVolumeVelocityEntity> cachedData = aggMerchantVolumeVelocityCacheRepository.findByMerchantId(mid);
    if (!cachedData.isEmpty()) {
        return cachedData.stream().map(entity -> {
            AggMerchantVolumeVelocity volumeVelocity = new AggMerchantVolumeVelocity();
            BeanUtils.copyProperties(entity, volumeVelocity);
            volumeVelocity.setMerchVolVelId(entity.getMerchantVvlId());
            return volumeVelocity;
        }).toList();
    }

    // Fetch from DB if not in cache
    List<AggMerchantVolumeVelocity> dbData = aggMerchantVolumeVelocityRepository.findByMerchantId(mid);
    if (dbData.isEmpty()) {
        throw new AdminException(ErrorConstants.VOLUME_ERROR_CODE, ErrorConstants.VOLUME_ERROR_MESSAGE);
    }

    // Convert to cache entities and save
    List<AggMerchantVolumeVelocityEntity> entities = dbData.stream().map(volume -> {
        AggMerchantVolumeVelocityEntity entity = new AggMerchantVolumeVelocityEntity();
        BeanUtils.copyProperties(volume, entity);
        entity.setMerchantVvlId(volume.getMerchVolVelId());
        return entity;
    }).toList();
    aggMerchantVolumeVelocityCacheRepository.saveAll(entities);

    return dbData;
}