public KMSEncryptionKeysResponse generateEncryptionKey(KeyGenerationRequest keyGenerationRequest) {
    MerchantResponse<String> kmsResponse = kmsClient.generateEncryptionKeys(
        keyGenerationRequest.getMId(), 
        keyGenerationRequest.getOldKeyExpiryInHr(), 
        merchantConfig.getEncryptionKeyExpiryTime()
    );

    UUID keyId = handleKeyGenerationResponse(
        kmsResponse,
        keyGenerationRequest.getMId(),
        KeyType.ENCRYPTION,
        "Encryption Key Generated"
    );

    return KMSEncryptionKeysResponse.builder()
        .id(keyId)
        .mek(kmsResponse.getData() != null && CollectionUtils.isNotEmpty(kmsResponse.getData()) 
            ? kmsResponse.getData().getFirst() 
            : null)
        .build();
}

private UUID handleKeyGenerationResponse(
    MerchantResponse<String> kmsResponse,
    String mId,
    KeyType keyType,
    String successMessage
) {
    try {
        if (kmsResponse.getStatus() == MerchantConstant.RESPONSE_SUCCESS 
                && CollectionUtils.isNotEmpty(kmsResponse.getData())) {
            return saveKey(mId, keyType, MerchantConstant.RESPONSE_SUCCESS, successMessage);
        } else if (kmsResponse.getStatus() == MerchantConstant.RESPONSE_FAILURE) {
            saveKey(mId, keyType, MerchantConstant.RESPONSE_FAILURE, 
                Arrays.toString(kmsResponse.getErrors().toArray(new ErrorDto[0])));
            throw new ValidationException(kmsResponse.getErrors());
        }
        saveKey(mId, keyType, MerchantConstant.RESPONSE_FAILURE, "Error in Key Generation");
        throw new MerchantException(
            ErrorConstants.GENERATION_ERROR_CODE, 
            MessageFormat.format(ErrorConstants.GENERATION_ERROR_MESSAGE, keyType.name())
        );
    } catch (Exception e) {
        log.error("Error in {} Key Generation: ", keyType.name(), e);
        saveKey(mId, keyType, MerchantConstant.RESPONSE_FAILURE, 
            "Error in Key Generation: " + e.getMessage());
        throw new MerchantException(
            ErrorConstants.GENERATION_ERROR_CODE, 
            MessageFormat.format(ErrorConstants.GENERATION_ERROR_MESSAGE, keyType.name())
        );
    }
}