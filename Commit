private static byte[] generateAudioBytes(String text, UUID requestId) {
    String uniqueFileName = "speech_" + System.currentTimeMillis() + "_" + requestId;
    File tempFile = null;

    try {
        tempFile = File.createTempFile(uniqueFileName, ".wav");
        tempFile.deleteOnExit();

        Voice voice = Optional.ofNullable(VoiceManager.getInstance().getVoice(VOICE_NAME))
                .orElseThrow(() -> new MerchantException(ErrorConstants.GENERATION_ERROR_CODE,
                        "Voice '" + VOICE_NAME + "' not found"));

        voice.allocate();

        // Create AudioPlayer
        AudioPlayer audioPlayer = new SingleFileAudioPlayer(tempFile.getAbsolutePath().replace(".wav", ""),
                javax.sound.sampled.AudioFileFormat.Type.WAVE);

        voice.setAudioPlayer(audioPlayer);
        voice.speak(text);
        voice.deallocate();
        audioPlayer.close();

        logger.info("Audio file generated successfully for requestId: {}", requestId);

        // Convert file to byte array
        return fileToByteArray(tempFile);

    } catch (Exception e) {
        logger.error("Error generating speech audio for requestId: {}", requestId, e);
        throw new MerchantException(ErrorConstants.GENERATION_ERROR_CODE,
                MessageFormat.format(ErrorConstants.GENERATION_ERROR_MESSAGE, requestId));

    } finally {
        // **Ensure Temp File Deletion**
        if (tempFile != null && tempFile.exists()) {
            if (tempFile.delete()) {
                logger.info("Temporary file deleted: {}", tempFile.getAbsolutePath());
            } else {
                logger.warn("Failed to delete temporary file: {}", tempFile.getAbsolutePath());
            }
        }
    }
}