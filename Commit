import javax.activation.DataSource;
import javax.activation.DataHandler;
import javax.mail.internet.MimeBodyPart;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.nio.charset.StandardCharsets;

private static final String STATIC_BOUNDARY = "CUSTOM_BOUNDARY_12345"; // Define a fixed boundary

private DataSource createManualMultipartResponse(CaptchaResponse captchaResponse, byte[] audioBytes, RequestType requestType) {
    logger.info("Creating manual multipart response for RequestId: {}", captchaResponse.getRequestId());

    try {
        // Convert JSON to String
        String jsonResponse = convertToJson(captchaResponse, requestType);

        // Create the multipart content manually
        StringBuilder multipartData = new StringBuilder();
        
        // Add JSON Part
        multipartData.append("--").append(STATIC_BOUNDARY).append("\r\n");
        multipartData.append("Content-Type: application/json; charset=UTF-8\r\n");
        multipartData.append("\r\n").append(jsonResponse).append("\r\n");

        // Add Audio Part
        multipartData.append("--").append(STATIC_BOUNDARY).append("\r\n");
        multipartData.append("Content-Disposition: attachment; filename=\"speech.wav\"\r\n");
        multipartData.append("Content-Type: audio/wav\r\n");
        multipartData.append("Content-Transfer-Encoding: base64\r\n");
        multipartData.append("\r\n");

        // Convert audio bytes to Base64
        String base64Audio = java.util.Base64.getEncoder().encodeToString(audioBytes);
        multipartData.append(base64Audio).append("\r\n");

        // End Boundary
        multipartData.append("--").append(STATIC_BOUNDARY).append("--\r\n");

        // Convert String to ByteArrayDataSource
        byte[] multipartBytes = multipartData.toString().getBytes(StandardCharsets.UTF_8);
        return new javax.mail.util.ByteArrayDataSource(multipartBytes, "multipart/mixed; boundary=" + STATIC_BOUNDARY);

    } catch (Exception e) {
        logger.error("Error creating manual multipart response for RequestId: {}", captchaResponse.getRequestId(), e);
        throw new MerchantException(ErrorConstants.GENERATION_ERROR_CODE,
                MessageFormat.format(ErrorConstants.GENERATION_ERROR_MESSAGE, requestType.name()));
    }
}