public List<AggMerchantVolumeVelocity> getMerchantVolumeDetails(String mid) {
        //fetching from cache
        List<AggMerchantVolumeVelocityEntity> cachedData =aggMerchantVolumeVelocityCacheRepository.findByMerchantId(mid);
        if (cachedData != null && !cachedData.isEmpty()) {
            return cachedData.stream().map(entity -> {
                AggMerchantVolumeVelocity volumeVelocity = new AggMerchantVolumeVelocity();
                volumeVelocity.setMerchVolVelId(entity.getMerchantVvlId()); // Map merchantId to merchant_Vvl_Id
                BeanUtils.copyProperties(entity, volumeVelocity);
                return volumeVelocity;
            }).toList();
        }

        // Not in Cache then fetch from DB
        List<AggMerchantVolumeVelocity> merchantVolumeDetailsData =aggMerchantVolumeVelocityRepository.findByMerchantId(mid);
        if (merchantVolumeDetailsData == null || merchantVolumeDetailsData.isEmpty())
            throw new AdminException(ErrorConstants.VOLUME_ERROR_CODE, ErrorConstants.VOLUME_ERROR_MESSAGE);

        List<AggMerchantVolumeVelocityEntity> entityList = merchantVolumeDetailsData.stream().map(volumeVelocity -> {
            AggMerchantVolumeVelocityEntity entity = new AggMerchantVolumeVelocityEntity();
            entity.setMerchantVvlId(volumeVelocity.getMerchVolVelId()); // Map merchantId to merchant_Vvl_Id
            BeanUtils.copyProperties(volumeVelocity, entity);
            return entity;
        }).toList();

        // Save the list into the cache
        aggMerchantVolumeVelocityCacheRepository.saveAll(entityList);
        return merchantVolumeDetailsData;
    }
