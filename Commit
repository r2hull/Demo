public ResponseEntity<byte[]> generateCaptcha(CaptchaRequest captchaRequest) {
    logger.info("Generating captcha for RequestId: {}", captchaRequest.getRequestId());

    captchaValidator.requestValidator(captchaRequest);
    
    byte[] captchaBytes = createCaptchaResponse(captchaRequest);
    HttpHeaders headers = createHeaders(captchaBytes.length);

    return ResponseEntity.ok().headers(headers).body(captchaBytes);
}

private byte[] createCaptchaResponse(CaptchaRequest captchaRequest) {
    try (ByteArrayOutputStream outputStream = new ByteArrayOutputStream()) {
        saveCaptcha(captchaRequest, false).writeTo(outputStream);
        return outputStream.toByteArray();
    } catch (IOException | MessagingException e) {
        throw new MerchantException(ErrorConstants.GENERATION_ERROR_CODE,
                MessageFormat.format(ErrorConstants.GENERATION_ERROR_MESSAGE, captchaRequest.getRequestType() + "Key"));
    }
}

private HttpHeaders createHeaders(int contentLength) {
    HttpHeaders headers = new HttpHeaders();
    headers.setContentType(MediaType.MULTIPART_MIXED);
    headers.setContentLength(contentLength);
    return headers;
}