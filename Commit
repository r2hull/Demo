import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

import com.epay.reporting.dao.ReportManagementDao;
import com.epay.reporting.dto.ReportManagementDto;
import com.epay.reporting.entity.ReportManagement;
import com.epay.reporting.model.request.ReportManagementRequest;
import com.epay.reporting.repository.ReportManagementRepository;
import com.epay.reporting.mapper.ReportManagementMapper;
import com.epay.reporting.specification.ReportManagementSpecification;
import com.epay.reporting.util.enums.ReportFormat;
import com.epay.reporting.exception.ReportingException;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.*;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;

import java.util.UUID;
import java.util.Optional;

class ReportManagementDaoTest {

    @Mock
    private ReportManagementRepository reportManagementRepository;

    @Mock
    private ReportManagementMapper mapper;

    @Mock
    private ReportMasterDao reportMasterDao;

    private ReportManagementDao reportManagementDao;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
        reportManagementDao = new ReportManagementDao(reportManagementRepository, mapper, reportMasterDao, null);
    }

    @Test
    void testSearchAndGetReportManagement() {
        // Arrange
        Pageable pageable = PageRequest.of(0, 10);

        // Create a mock ReportManagementRequest
        ReportManagementRequest reportManagementRequest = ReportManagementRequest.builder()
                .report(Report.BILLING)  // assuming Report is an enum
                .mId("123")
                .durationFromDate(1633200000000L)  // example timestamp
                .durationToDate(1633290000000L)  // example timestamp
                .format(ReportFormat.PDF)
                .build();

        // Mock the behavior of reportMasterDao to return a reportId for the given report name
        UUID reportId = UUID.randomUUID();
        when(reportMasterDao.getReportIdByName(reportManagementRequest.getReport()))
                .thenReturn(reportId);

        // Create a mock ReportManagement entity
        ReportManagement reportManagement = new ReportManagement();
        reportManagement.setId(UUID.randomUUID());

        // Mock the behavior of the repository to return a page of ReportManagement
        when(reportManagementRepository.findAll(any(Specification.class), eq(pageable)))
                .thenReturn(new PageImpl<>(List.of(reportManagement)));

        // Mock the mapper to convert the ReportManagement entity to DTO
        ReportManagementDto reportManagementDto = new ReportManagementDto();
        when(mapper.mapEntityToDto(reportManagement)).thenReturn(reportManagementDto);

        // Act
        Page<ReportManagementDto> result = reportManagementDao.searchAndGetReportManagement(reportManagementRequest, pageable);

        // Assert
        assertNotNull(result);
        assertEquals(1, result.getTotalElements());  // Assuming one report is returned
        verify(reportMasterDao).getReportIdByName(reportManagementRequest.getReport());
        verify(reportManagementRepository).findAll(any(Specification.class), eq(pageable));
    }
}