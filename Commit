package com.epay.merchant.util;

import com.epay.merchant.exception.MerchantException;
import com.sun.speech.freetts.Voice;
import com.sun.speech.freetts.VoiceManager;
import com.sun.speech.freetts.audio.AudioPlayer;
import com.sun.speech.freetts.audio.JavaClipAudioPlayer;
import lombok.experimental.UtilityClass;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.ByteArrayOutputStream;
import java.text.MessageFormat;

/**
 * Class Name: VoiceCaptchaUtil
 * *
 * Description: Utility class for generating voice captcha audio files.
 * *
 * Author: Bhoopendra Rajput
 * <p>
 * Copyright (c) 2024 [State Bank of India]
 * All rights reserved
 * *
 * Version: 1.2
 */
@UtilityClass
public class VoiceCaptchaUtil {

    private static final Logger logger = LoggerFactory.getLogger(VoiceCaptchaUtil.class);
    private static final String VOICENAME = "kevin16";

    /**
     * Converts the given text to speech and returns the audio as a byte array.
     * If the voice is not found, returns null.
     *
     * @param text the text to convert to speech.
     * @return a byte array containing the speech audio, or null if voice is unavailable.
     */
    public static byte[] speakToByteArray(String text) {
        System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");

        try (ByteArrayOutputStream outputStream = new ByteArrayOutputStream()) {
            Voice voice = VoiceManager.getInstance().getVoice(VOICENAME);

            if (voice == null) {
                logger.warn("FreeTTS voice '{}' not found. Returning null.", VOICENAME);
                return null; // Gracefully returning null instead of throwing an exception.
            }

            voice.allocate();
            AudioPlayer audioPlayer = new JavaClipAudioPlayer(outputStream);
            voice.setAudioPlayer(audioPlayer);

            logger.info("Converting text to speech...");
            voice.speak(text);

            voice.deallocate();
            audioPlayer.close();

            return outputStream.toByteArray();

        } catch (Exception e) {
            logger.error("Error occurred while generating speech audio", e);
            throw new MerchantException("AUDIO_GENERATION_ERROR", 
                    MessageFormat.format("Error generating audio: {0}", e.getMessage()));
        }
    }
}