
@Component
@AllArgsConstructor
public class AggMerchantVolumeVelocityDao {

    private final AggMerchantVolumeVelocityRepository aggMerchantVolumeVelocityRepository;

    public List<Map<String,Object>> getMerchantVolumeDetails(String mid) {
        List<Map<String,Object>> merchantVolumeDetailsData= (List<Map<String, Object>>) aggMerchantVolumeVelocityRepository.getMerchantVolumeDetails(mid);
        Optional.ofNullable(merchantVolumeDetailsData).filter(x->!x.isEmpty()).orElseThrow(()->new AdminException(ErrorConstants.VOLUME_ERROR_CODE,ErrorConstants.VOLUME_ERROR_MESSAGE));
       return merchantVolumeDetailsData;
    }

}


@Service
@Data
@AllArgsConstructor
public class AggMerchantVolumeVelocityService {


    private final ModelMapper modelMapper;

    private final AggMerchantVolumeVelocityDao aggMerchantVolumeVelocityDao;

       public ResponseDto<AggMerchantVolumeVelocityResponse> getMerchantVolumeVelocityDetails(String mid) {
           List<Map<String,Object>> merchantVolumeDetailsData=  aggMerchantVolumeVelocityDao.getMerchantVolumeDetails(mid);
           List<AggMerchantVolumeVelocityResponse> volumeDtoModelMapper = this.modelMapper.map(merchantVolumeDetailsData,new TypeReference<List<AggMerchantVolumeVelocityResponse>>() {}.getType());
           return ResponseDto.<AggMerchantVolumeVelocityResponse>builder().data(volumeDtoModelMapper).status(1).count(1L).build();
       }

}
