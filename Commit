private MimeMultipart saveCaptcha(CaptchaRequest captchaRequest, boolean retry) {
    RequestType requestType = RequestType.getRequestType(captchaRequest.getRequestType());

    // Generate Captcha and its Base64 Image
    String captchaText = captchaProducer.createText();
    String base64Image = generateCaptchaImage(captchaText);

    // Generate Audio Captcha
    DataSource audioDataSource = generateAudioCaptcha(captchaText);

    // Save Captcha and Map to Response
    CaptchaResponse captchaResponse = saveAndMapCaptchaResponse(captchaText, captchaRequest, requestType, retry, base64Image);

    // Create MimeMultipart Response
    return createMultipartResponse(captchaResponse, audioDataSource, requestType);
}

// Generate audio captcha
private DataSource generateAudioCaptcha(String captchaText) {
    byte[] audioBytes = VoiceCaptchaUtil.speakToByteArray(captchaText);
    return new ByteArrayDataSource(audioBytes, "audio/wav");
}

// Save Captcha and Map to Response
private CaptchaResponse saveAndMapCaptchaResponse(String captchaText, CaptchaRequest captchaRequest, RequestType requestType, boolean retry, String base64Image) {
    CaptchaDto captchaDto = captchaDao.save(captchaText, captchaRequest.getRequestId(), requestType, retry);
    return captchaMapper.mapCaptchaDtoToCaptchaResponse(captchaDto, base64Image);
}

// Convert CaptchaResponse to JSON String
private String convertToJson(CaptchaResponse captchaResponse, RequestType requestType) {
    try {
        return new ObjectMapper().writeValueAsString(captchaResponse);
    } catch (JsonProcessingException e) {
        throw new MerchantException(ErrorConstants.GENERATION_ERROR_CODE,
                MessageFormat.format(ErrorConstants.GENERATION_ERROR_MESSAGE, requestType.name() + "Key"));
    }
}

// Create multipart response
private MimeMultipart createMultipartResponse(CaptchaResponse captchaResponse, DataSource audioDataSource, RequestType requestType) {
    MimeMultipart mimeMultipart = new MimeMultipart("mixed");

    try {
        // Add JSON Part
        MimeBodyPart jsonPart = new MimeBodyPart();
        jsonPart.setContent(convertToJson(captchaResponse, requestType), "application/json; charset=UTF-8");
        mimeMultipart.addBodyPart(jsonPart);

        // Add Audio File Part
        MimeBodyPart filePart = new MimeBodyPart();
        filePart.setDataHandler(new DataHandler(audioDataSource));
        filePart.setFileName("speech.wav");
        mimeMultipart.addBodyPart(filePart);
    } catch (MessagingException e) {
        throw new MerchantException(ErrorConstants.GENERATION_ERROR_CODE,
                MessageFormat.format(ErrorConstants.GENERATION_ERROR_MESSAGE, requestType.name() + "Key"));
    }

    logger.info("Captcha generation completed for RequestId: {}", captchaResponse.getRequestId());
    return mimeMultipart;
}